{"version":3,"sources":["components/navbar.component.js","components/exercises-list.component.js","components/edit-exercise.component.js","components/create-excercise.component.js","components/create-user.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","react_router_dom","to","Component","Exercise","props","exercise","username","description","duration","date","substring","_id","href","onClick","deleteExercise","ExercisesList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","state","exercises","_this2","axios","get","then","response","setState","data","catch","error","console","log","id","delete","filter","el","_this3","map","currentexercise","exercises_list_component_Exercise","key","exerciseList","EditExercise","onChangeUsername","onChangeDescription","onChangeDuration","onChangeDate","onSubmit","Date","users","match","params","length","user","e","target","value","preventDefault","post","res","window","location","ref","required","onChange","type","react_datepicker_min_default","selected","CreateExercise","CreateUser","App","navbar_component_Navbar","react_router","path","exact","component","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.30e4fe4f.chunk.js","sourcesContent":["  \r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Navbar extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\r\n        <Link to=\"/\" className=\"navbar-brand\">ExcerTracker</Link>\r\n        <div className=\"collpase navbar-collapse\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"navbar-item\">\r\n          <Link to=\"/\" className=\"nav-link\">Exercises</Link>\r\n          </li>\r\n          <li className=\"navbar-item\">\r\n          <Link to=\"/create\" className=\"nav-link\">Create Exercise Log</Link>\r\n          </li>\r\n          <li className=\"navbar-item\">\r\n          <Link to=\"/user\" className=\"nav-link\">Create User</Link>\r\n          </li>\r\n        </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Exercise = props => (\r\n  <tr>\r\n    <td>{props.exercise.username}</td>\r\n    <td>{props.exercise.description}</td>\r\n    <td>{props.exercise.duration}</td>\r\n    <td>{props.exercise.date.substring(0,10)}</td>\r\n    <td>\r\n      <Link to={\"/edit/\"+props.exercise._id}>edit</Link> | <a href=\"#\" onClick={() => { props.deleteExercise(props.exercise._id) }}>delete</a>\r\n    </td>\r\n  </tr>\r\n)\r\n\r\nexport default class ExercisesList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deleteExercise = this.deleteExercise.bind(this)\r\n\r\n    this.state = {exercises: []};\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:5000/exercises/')\r\n      .then(response => {\r\n        this.setState({ exercises: response.data })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  deleteExercise(id) {\r\n    axios.delete('http://localhost:5000/exercises/'+id)\r\n      .then(response => { console.log(response.data)});\r\n\r\n    this.setState({\r\n      exercises: this.state.exercises.filter(el => el._id !== id)\r\n    })\r\n  }\r\n\r\n  exerciseList() {\r\n    return this.state.exercises.map(currentexercise => {\r\n      return <Exercise exercise={currentexercise} deleteExercise={this.deleteExercise} key={currentexercise._id}/>;\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Logged Exercises</h3>\r\n        <table className=\"table\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Username</th>\r\n              <th>Description</th>\r\n              <th>Duration</th>\r\n              <th>Date</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            { this.exerciseList() }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default class EditExercise extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeDuration = this.onChangeDuration.bind(this);\r\n    this.onChangeDate = this.onChangeDate.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      username: '',\r\n      description: '',\r\n      duration: 0,\r\n      date: new Date(),\r\n      users: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:5000/exercises/'+this.props.match.params.id)\r\n      .then(response => {\r\n        this.setState({\r\n          username: response.data.username,\r\n          description: response.data.description,\r\n          duration: response.data.duration,\r\n          date: new Date(response.data.date)\r\n        })   \r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n\r\n    axios.get('http://localhost:5000/users/')\r\n      .then(response => {\r\n        if (response.data.length > 0) {\r\n          this.setState({\r\n            users: response.data.map(user => user.username),\r\n          })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangeDuration(e) {\r\n    this.setState({\r\n      duration: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangeDate(date) {\r\n    this.setState({\r\n      date: date\r\n    })\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const exercise = {\r\n      username: this.state.username,\r\n      description: this.state.description,\r\n      duration: this.state.duration,\r\n      date: this.state.date\r\n    }\r\n\r\n    console.log(exercise);\r\n\r\n    axios.post('http://localhost:5000/exercises/update/' + this.props.match.params.id, exercise)\r\n      .then(res => console.log(res.data));\r\n\r\n    window.location = '/';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div>\r\n      <h3>Edit Exercise Log</h3>\r\n      <form onSubmit={this.onSubmit}>\r\n        <div className=\"form-group\"> \r\n          <label>Username: </label>\r\n          <select ref=\"userInput\"\r\n              required\r\n              className=\"form-control\"\r\n              value={this.state.username}\r\n              onChange={this.onChangeUsername}>\r\n              {\r\n                this.state.users.map(function(user) {\r\n                  return <option \r\n                    key={user}\r\n                    value={user}>{user}\r\n                    </option>;\r\n                })\r\n              }\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\"> \r\n          <label>Description: </label>\r\n          <input  type=\"text\"\r\n              required\r\n              className=\"form-control\"\r\n              value={this.state.description}\r\n              onChange={this.onChangeDescription}\r\n              />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Duration (in minutes): </label>\r\n          <input \r\n              type=\"text\" \r\n              className=\"form-control\"\r\n              value={this.state.duration}\r\n              onChange={this.onChangeDuration}\r\n              />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Date: </label>\r\n          <div>\r\n            <DatePicker\r\n              selected={this.state.date}\r\n              onChange={this.onChangeDate}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <input type=\"submit\" value=\"Edit Exercise Log\" className=\"btn btn-primary\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default class CreateExercise extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeDuration = this.onChangeDuration.bind(this);\r\n    this.onChangeDate = this.onChangeDate.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      username: '',\r\n      description: '',\r\n      duration: 0,\r\n      date: new Date(),\r\n      users: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:5000/users/')\r\n      .then(response => {\r\n        if (response.data.length > 0) {\r\n          this.setState({\r\n            users: response.data.map(user => user.username),\r\n            username: response.data[0].username\r\n          })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangeDuration(e) {\r\n    this.setState({\r\n      duration: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangeDate(date) {\r\n    this.setState({\r\n      date: date\r\n    })\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const exercise = {\r\n      username: this.state.username,\r\n      description: this.state.description,\r\n      duration: this.state.duration,\r\n      date: this.state.date\r\n    }\r\n\r\n    console.log(exercise);\r\n\r\n    axios.post('http://localhost:5000/exercises/add', exercise)\r\n      .then(res => console.log(res.data));\r\n\r\n    window.location = '/';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div>\r\n      <h3>Create New Exercise Log</h3>\r\n      <form onSubmit={this.onSubmit}>\r\n        <div className=\"form-group\"> \r\n          <label>Username: </label>\r\n          <input  type=\"text\"\r\n              required\r\n              className=\"form-control\"\r\n              value={this.state.username}\r\n              onChange={this.onChangeUsername}\r\n              />\r\n          {/* <select ref=\"userInput\"\r\n              required\r\n              className=\"form-control\"\r\n              value={this.state.username}\r\n              onChange={this.onChangeUsername}>\r\n              {\r\n                this.state.users.map(function(user) {\r\n                  return <option \r\n                    key={user}\r\n                    value={user}>{user}\r\n                    </option>;\r\n                })\r\n              }\r\n          </select> */}\r\n        </div>\r\n        <div className=\"form-group\"> \r\n          <label>Description: </label>\r\n          <input  type=\"text\"\r\n              required\r\n              className=\"form-control\"\r\n              value={this.state.description}\r\n              onChange={this.onChangeDescription}\r\n              />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Duration (in minutes): </label>\r\n          <input \r\n              type=\"text\" \r\n              className=\"form-control\"\r\n              value={this.state.duration}\r\n              onChange={this.onChangeDuration}\r\n              />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Date: </label>\r\n          <div>\r\n            <DatePicker\r\n              selected={this.state.date}\r\n              onChange={this.onChangeDate}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <input type=\"submit\" value=\"Create Exercise Log\" className=\"btn btn-primary\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class CreateUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      username: ''\r\n    }\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    })\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      username: this.state.username\r\n    }\r\n\r\n    console.log(user);\r\n\r\n    axios.post('http://localhost:5000/users/add', user)\r\n      .then(res => console.log(res.data));\r\n\r\n    this.setState({\r\n      username: ''\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Create New User</h3>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\"> \r\n            <label>Username: </label>\r\n            <input  type=\"text\"\r\n                required\r\n                className=\"form-control\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input type=\"submit\" value=\"Create User\" className=\"btn btn-primary\" />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}","\r\nimport React from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\r\n\r\nimport Navbar from \"./components/navbar.component\"\r\nimport ExercisesList from \"./components/exercises-list.component\";\r\nimport EditExercise from \"./components/edit-exercise.component\";\r\nimport CreateExercise from \"./components/create-excercise.component\";\r\nimport CreateUser from \"./components/create-user.component\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"container\">\r\n      <Navbar />\r\n      <br/>\r\n      <Route path=\"/\" exact component={ExercisesList} />\r\n      <Route path=\"/edit/:id\" component={EditExercise} />\r\n      <Route path=\"/create\" component={CreateExercise} />\r\n      <Route path=\"/user\" component={CreateUser} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}